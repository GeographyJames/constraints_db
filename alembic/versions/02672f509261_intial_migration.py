"""intial migration

Revision ID: 02672f509261
Revises: 
Create Date: 2024-03-01 08:55:43.484201

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '02672f509261'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE EXTENSION POSTGIS")
    op.execute("CREATE SCHEMA CONSTRAINTS")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('administrative_areas',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('abbreviation', sa.TEXT(), nullable=False),
                    sa.Column('parent_area_id', sa.Integer(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.ForeignKeyConstraint(['parent_area_id'], [
                        'administrative_areas.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('abbreviation'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('constraint_categories',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('description', sa.TEXT(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('data_licenses',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('description', sa.TEXT(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('data_publishers',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('abbreviation', sa.TEXT(), nullable=True),
                    sa.Column('description', sa.TEXT(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('priority_levels',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('description', sa.TEXT(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('development_constraints',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('constraint_category_id',
                              sa.Integer(), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('abbreviation', sa.TEXT(), nullable=True),
                    sa.Column('description', sa.TEXT(), nullable=True),
                    sa.Column('notes', sa.TEXT(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('onshore_wind_priority_level_id',
                              sa.Integer(), nullable=False),
                    sa.Column('solar_priority_level_id',
                              sa.Integer(), nullable=False),
                    sa.Column('table_name', sa.TEXT(), nullable=False),
                    sa.ForeignKeyConstraint(['constraint_category_id'], [
                        'constraint_categories.id'], ),
                    sa.ForeignKeyConstraint(['onshore_wind_priority_level_id'], [
                        'priority_levels.id'], ),
                    sa.ForeignKeyConstraint(['solar_priority_level_id'], [
                        'priority_levels.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('abbreviation'),
                    sa.UniqueConstraint('name'),
                    sa.UniqueConstraint('table_name')
                    )
    op.create_table('constraint_layers',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('development_constraint_id',
                              sa.Integer(), nullable=False),
                    sa.Column('administrative_area_id',
                              sa.Integer(), nullable=False),
                    sa.Column('data_publisher_id',
                              sa.Integer(), nullable=False),
                    sa.Column('data_license_id', sa.Integer(), nullable=True),
                    sa.Column('data_source', sa.TEXT(), nullable=True),
                    sa.Column('update_cycle', sa.TEXT(), nullable=True),
                    sa.Column('data_accessed_or_created',
                              sa.Date(), nullable=False),
                    sa.Column('data_last_updated', sa.Date(), nullable=True),
                    sa.Column('data_next_updated', sa.Date(), nullable=True),
                    sa.Column('data_expires', sa.Date(), nullable=True),
                    sa.Column('notes', sa.TEXT(), nullable=True),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.ForeignKeyConstraint(['administrative_area_id'], [
                        'administrative_areas.id'], ),
                    sa.ForeignKeyConstraint(['data_license_id'], [
                                            'data_licenses.id'], ),
                    sa.ForeignKeyConstraint(['data_publisher_id'], [
                        'data_publishers.id'], ),
                    sa.ForeignKeyConstraint(['development_constraint_id'], [
                        'development_constraints.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('constraint_objects',
                    sa.Column('id', sa.Integer(), sa.Identity(
                        always=False), nullable=False),
                    sa.Column('name', sa.TEXT(), nullable=False),
                    sa.Column('status', sa.TEXT(), nullable=True),
                    sa.Column('constraint_layer_id',
                              sa.Integer(), nullable=False),
                    sa.Column('created', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('last_update', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('last_update_by', sa.TEXT(), server_default=sa.text(
                        'CURRENT_USER'), nullable=False),
                    sa.Column('geom', Geometry(srid=27700, spatial_index=False,
                                               from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
                    sa.ForeignKeyConstraint(['constraint_layer_id'], [
                        'constraint_layers.id'], ),
                    postgresql_partition_by='LIST(GeometryType(geom))'
                    )
    op.create_geospatial_index('idx_constraint_objects_geom', 'constraint_objects', [
                               'geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_geospatial_index('idx_constraint_objects_geom',
                             table_name='constraint_objects', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('constraint_objects')
    op.drop_table('constraint_layers')
    op.drop_table('development_constraints')
    op.drop_table('priority_levels')
    op.drop_table('data_publishers')
    op.drop_table('data_licenses')
    op.drop_table('constraint_categories')
    op.drop_table('administrative_areas')
    # ### end Alembic commands ###
